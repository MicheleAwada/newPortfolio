version: "3.4"
services:
  backend:
    container_name: portfolio_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/config/.env
      - ./backend/config/.db.env
    expose:
      - 8080
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8080 --log-level debug
    depends_on:
      - postgres
    networks:
      - internal
  postgres:
    image: postgres:alpine
    container_name: portfolio_postgres
    volumes:
      - portfolio_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./backend/config/.db.env
    networks:
      - internal
  nginx:
    image: nginx:alpine
    container_name: portfolio_nginx
    expose:
      - 80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist:/dist
      - ./chess/dist:/chess/dist
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portfolio.middlewares=no-www-http@file,to-https@file"
      - "traefik.http.routers.portfolio.rule=Host(`micheleawada.com`) || Host(`www.micheleawada.com`) || Host(`chess.micheleawada.com`) || Host(`www.chess.micheleawada.com`) || Host(`backend.micheleawada.com`)"
      - "traefik.http.routers.portfolio.entrypoints=web"
      - "traefik.http.routers.portfolio-secure.rule=Host(`micheleawada.com`) || Host(`www.micheleawada.com`) || Host(`chess.micheleawada.com`) || Host(`www.chess.micheleawada.com`) || Host(`backend.micheleawada.com`)"
      - "traefik.http.routers.portfolio-secure.middlewares=no-www@file"
      - "traefik.http.routers.portfolio-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.portfolio-secure.tls=true"
      - "traefik.http.routers.portfolio-secure.entrypoints=web-secure"

    networks:
      - internal
      - traefikproxy

volumes:
  portfolio_postgres_data:

networks:
  internal:
  traefikproxy:
    name: traefikproxy
    external: true
